/** @file     Rte_swc.h
  *
  * @brief    Application header file
  *
  * @note     AUTOMATICALLY GENERATED FILE! DO NOT EDIT!
  *
  * @note     Generated by ETAS RTA-RTE
  * @note     Version 7.1.0 
  *
  * @date     Mon Nov 29 00:19:24 2021
  */

#ifndef RTE_SWC_H
#define RTE_SWC_H

#ifndef RTE_CORE
#ifdef RTE_APPLICATION_HEADER_FILE
#error Multiple application header files included.
#endif /* RTE_APPLICATION_HEADER_FILE */
#define RTE_APPLICATION_HEADER_FILE
#endif /* RTE_CORE */

/*******************************************************
 ***
 *** Includes
 ***
 *******************************************************/

#include "Rte.h"
#include "Rte_Intl.h"
#include "Rte_swc_Type.h"

#include "Rte_DataHandleType.h"

#ifdef __cplusplus
extern "C" {
#endif /* __cplusplus */

#if defined(RTE_RUNNABLEAPI_RunnableEntity_0)
   /* Do nothing for this and all elif clauses below (rte_sws_2751) */
#else
   /* None of above defined so define value including all APIs (rte_sws_2751) */
   #define RTE_PRV_ALL_API
#endif

/*******************************************************
 ***
 *** Constants
 ***
 *******************************************************/


/*******************************************************
 ***
 *** Public Types
 ***
 *******************************************************/

/* BEGIN: SWC types (core visible) */
struct Rte_CDS_swc {
   /* Data handles */
   P2VAR(Rte_DE_uint16     , AUTOMATIC, RTE_DATA) RunnableEntity_0_PPortPrototype_0_DataElements_VariableDataPrototype_0;
   P2VAR(Rte_DE_uint8_least, AUTOMATIC, RTE_DATA) RunnableEntity_0_RPortPrototype_0_DataElements_VariableDataPrototype_0;
};
typedef struct Rte_CDS_swc Rte_CDS_swc;
/* END: SWC types (core visible) */

/*******************************************************
 ***
 *** Private Types
 ***
 *******************************************************/

/* BEGIN: SWC types (private) */
/* END: SWC types (private) */

/*******************************************************
 ***
 *** Instance Declarations
 ***
 *******************************************************/

#define RTE_START_SEC_CONST_UNSPECIFIED
#include "Rte_MemMap.h"
extern CONST(struct Rte_CDS_swc, RTE_CONST) Rte_Inst_swc;
#define RTE_STOP_SEC_CONST_UNSPECIFIED
#include "Rte_MemMap.h"


#ifndef RTE_CORE
typedef CONSTP2CONST(struct Rte_CDS_swc, AUTOMATIC, RTE_CONST) Rte_Instance;
#endif /* RTE_CORE */

/*******************************************************
 ***
 *** API Mapping macros
 ***
 *******************************************************/

/* API Mapping Macros */
#ifndef RTE_CORE
#define RTE_START_SEC_VAR_CLEARED_32
#include "Rte_MemMap.h"
extern VAR(Rte_ImplicitBufsType, RTE_DATA) Rte_ImplicitBufs;
#define RTE_STOP_SEC_VAR_CLEARED_32
#include "Rte_MemMap.h"
#if defined(RTE_PRV_ALL_API) || defined(RTE_RUNNABLEAPI_RunnableEntity_0)
/* Inline read optimization; Rte_IRead_RunnableEntity_0_RPortPrototype_0_DataElements_VariableDataPrototype_0 to implicit access macro */
#define Rte_IRead_RunnableEntity_0_RPortPrototype_0_DataElements_VariableDataPrototype_0()  ( (CONST(uint8_least, RTE_DATA)) Rte_ImplicitBufs.isa_1.Rte_OsTask_0.rbuf0.value )
#endif
#if defined(RTE_PRV_ALL_API) || defined(RTE_RUNNABLEAPI_RunnableEntity_0)
/* Inline write optimization; Rte_IWriteRef_RunnableEntity_0_PPortPrototype_0_DataElements_VariableDataPrototype_0 to implicit access macro */
#define Rte_IWriteRef_RunnableEntity_0_PPortPrototype_0_DataElements_VariableDataPrototype_0()  ( (P2VAR(uint16, AUTOMATIC, RTE_DATA)) &Rte_ImplicitBufs.isa_1.Rte_OsTask_0.sbuf1.value )
#endif
#if defined(RTE_PRV_ALL_API) || defined(RTE_RUNNABLEAPI_RunnableEntity_0)
/* Inline write optimization; Rte_IWrite_RunnableEntity_0_PPortPrototype_0_DataElements_VariableDataPrototype_0 to implicit access macro */
#define Rte_IWrite_RunnableEntity_0_PPortPrototype_0_DataElements_VariableDataPrototype_0( data )  ( Rte_ImplicitBufs.isa_1.Rte_OsTask_0.sbuf1.value = (data) )
#endif

#endif /* RTE_CORE */

/*******************************************************
 ***
 *** RE Prototypes
 ***
 *******************************************************/

#define swc_START_SEC_CODE
#include "swc_MemMap.h"
FUNC(void, swc_CODE) RunnableEntity_0_func(void);
#define swc_STOP_SEC_CODE
#include "swc_MemMap.h"

/* Initial values for data element prototypes */

#ifdef __cplusplus
} /* extern C */
#endif /* __cplusplus */

#endif /* !RTE_SWC_H */
